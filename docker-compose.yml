version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: employee_leave_db
    environment:
      POSTGRES_DB: employee_leave_db
      POSTGRES_USER: leave_admin
      POSTGRES_PASSWORD: leave_password123
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/01-create-tables.sql:/docker-entrypoint-initdb.d/01-create-tables.sql
      - ./scripts/02-seed-data.sql:/docker-entrypoint-initdb.d/02-seed-data.sql
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U leave_admin -d employee_leave_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: employee_leave_app
    environment:
      - DATABASE_URL=postgresql://leave_admin:leave_password123@postgres:5432/employee_leave_db
      - JWT_SECRET=your-super-secret-jwt-key-for-docker-development
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=your-nextauth-secret-key-for-docker
      - NODE_ENV=development
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    command: sh -c "sleep 10 && npm run dev"

  # pgAdmin (Optional - for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: employee_leave_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - app-network

volumes:
  postgres_data:
  pgadmin_data:

networks:
  app-network:
    driver: bridge

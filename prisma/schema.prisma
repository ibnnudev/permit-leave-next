generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model Lembaga {
    id              Int      @id @default(autoincrement())
    nama            String
    alamat          String
    telepon         String
    dibuat_pada     DateTime @default(now())
    diperbarui_pada DateTime @default(now()) @updatedAt

    pegawai         Pegawai[]
    alurPersetujuan AlurPersetujuan[]
}

model Pegawai {
    id                  Int      @id @default(autoincrement())
    lembaga_id          Int
    nama                String
    jenis_kelamin       String
    jabatan             String
    no_wa               String
    alamat              String
    tempat_lahir        String
    tanggal_lahir       DateTime
    tmt                 DateTime
    status_pernikahan   String
    status_pegawai      String
    email_pribadi       String
    email_yayasan       String
    agama               String
    pendidikan_terakhir String
    kata_sandi          String
    peran               Peran    @default(KARYAWAN)
    dibuat_pada         DateTime @default(now())
    diperbarui_pada     DateTime @default(now()) @updatedAt

    lembaga               Lembaga                  @relation(fields: [lembaga_id], references: [id])
    cuti_diajukan         Cuti[]                   @relation("CutiDiajukan")
    cuti_disetujui        Cuti[]                   @relation("CutiDisetujui")
    kuota_cuti            KuotaCuti[]
    persetujuan_log       LogPersetujuan[]
    alur_dibuat           AlurPersetujuan[]        @relation("DibuatOleh")
    alur_sebagai_approver AlurPersetujuanPegawai[]
    Notifikasi            Notifikasi[]
}

enum Peran {
    SUPERADMIN
    ADMIN
    KARYAWAN
}

model JenisCuti {
    id              Int      @id @default(autoincrement())
    nama_izin       String
    deskripsi       String
    maksimal_hari   Int
    perlu_dokumen   Boolean
    dibuat_pada     DateTime @default(now())
    diperbarui_pada DateTime @default(now()) @updatedAt
    berjenjang      Boolean  @default(true)

    cuti            Cuti[]
    kuota           KuotaCuti[]
    alurPersetujuan AlurPersetujuan[]
}

model Cuti {
    id                      Int        @id @default(autoincrement())
    pegawai_id              Int
    jenis_cuti_id           Int
    tanggal_mulai           DateTime
    tanggal_selesai         DateTime
    alasan                  String
    status                  StatusCuti @default(DALAM_PROSES)
    level_terakhir_diproses Int
    catatan_admin           String?
    dicatat_oleh            String?
    disetujui_oleh_id       Int?
    dokumen                 String?
    dibuat_pada             DateTime   @default(now())
    diperbarui_pada         DateTime   @default(now()) @updatedAt

    pegawai         Pegawai          @relation("CutiDiajukan", fields: [pegawai_id], references: [id])
    jenisCuti       JenisCuti        @relation(fields: [jenis_cuti_id], references: [id])
    disetujui_oleh  Pegawai?         @relation("CutiDisetujui", fields: [disetujui_oleh_id], references: [id])
    log_persetujuan LogPersetujuan[]
}

enum StatusCuti {
    PENDING
    DALAM_PROSES
    DISETUJUI
    DITOLAK
}

model KuotaCuti {
    id             Int @id @default(autoincrement())
    pegawai_id     Int
    jenis_cuti_id  Int
    tahun          Int
    jatah_total    Int
    jatah_terpakai Int

    pegawai   Pegawai   @relation(fields: [pegawai_id], references: [id])
    jenisCuti JenisCuti @relation(fields: [jenis_cuti_id], references: [id])

    @@unique([pegawai_id, jenis_cuti_id, tahun])
}

model AlurPersetujuan {
    id             Int  @id @default(autoincrement())
    lembaga_id     Int
    jenis_cuti_id  Int?
    level          Int
    dibuat_oleh_id Int

    lembaga    Lembaga                  @relation(fields: [lembaga_id], references: [id])
    jenisCuti  JenisCuti?               @relation(fields: [jenis_cuti_id], references: [id])
    dibuatOleh Pegawai                  @relation("DibuatOleh", fields: [dibuat_oleh_id], references: [id])
    approver   AlurPersetujuanPegawai[]
}

model AlurPersetujuanPegawai {
    id                  Int @id @default(autoincrement())
    alur_persetujuan_id Int
    pegawai_id          Int

    alurPersetujuan AlurPersetujuan @relation(fields: [alur_persetujuan_id], references: [id])
    pegawai         Pegawai         @relation(fields: [pegawai_id], references: [id])
}

model LogPersetujuan {
    id                      Int               @id @default(autoincrement())
    cuti_id                 Int
    pegawai_id              Int
    level                   Int
    status                  StatusPersetujuan @default(PENDING)
    catatan                 String?
    tanggal_persetujuan     DateTime?
    batas_waktu_persetujuan DateTime?

    cuti    Cuti    @relation(fields: [cuti_id], references: [id])
    pegawai Pegawai @relation(fields: [pegawai_id], references: [id])
}

enum StatusPersetujuan {
    PENDING
    APPROVED
    REJECTED
    AUTO_APPROVED
}

model Notifikasi {
    id          Int      @id @default(autoincrement())
    pegawai_id  Int
    pesan       String
    dibaca      Boolean  @default(false)
    dibuat_pada DateTime @default(now())

    pegawai Pegawai @relation(fields: [pegawai_id], references: [id])
}

generator client {
    provider = "prisma-client-js"
    output   = "../generated/prisma"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model Lembaga {
    id         Int      @id @default(autoincrement())
    nama       String   @db.VarChar(255)
    alamat     String   @db.Text
    telepon    String   @db.VarChar(50)
    created_at DateTime @default(now())
    updated_at DateTime @default(now()) @updatedAt

    users         User[]
    approvalFlows CutiApprovalFlow[]

    @@map("lembaga")
}

model User {
    id            Int       @id @default(autoincrement())
    lembaga_id    Int
    nama          String    @db.VarChar(255)
    email         String    @unique @db.VarChar(255)
    password      String    @db.VarChar(255)
    role          Role      @default(karyawan)
    jabatan       String?   @db.VarChar(255)
    tanggal_masuk DateTime?
    created_at    DateTime  @default(now())
    updated_at    DateTime  @default(now()) @updatedAt

    lembaga               Lembaga            @relation(fields: [lembaga_id], references: [id])
    kuotaCuti             KuotaCuti[]
    leaveRequestsSent     LeaveRequest[]     @relation("LeaveUser")
    leaveRequestsReviewed LeaveRequest[]     @relation("LeaveReviewer")
    approvalLog           CutiApprovalLog[]
    approvalFlows         CutiApprovalFlow[] @relation("ApproverFlow")
    approvalFlowsCreated  CutiApprovalFlow[] @relation("FlowCreatedBy")
    notifikasi            Notifikasi[]

    @@map("users")
}

model JenisCuti {
    id                      Int      @id @default(autoincrement())
    nama_izin               String   @db.VarChar(255)
    maksimal_hari_per_tahun Int
    keterangan              String?  @db.Text
    perlu_dokumen           Boolean  @default(false)
    approval_berjenjang     Boolean  @default(true)
    created_at              DateTime @default(now())
    updated_at              DateTime @default(now()) @updatedAt

    leaveRequests LeaveRequest[]
    kuotaCuti     KuotaCuti[]
    approvalFlows CutiApprovalFlow[]

    @@map("jenis_cuti")
}

model LeaveRequest {
    id                      Int         @id @default(autoincrement())
    user_id                 Int
    jenis_cuti_id           Int
    tanggal_mulai           DateTime
    tanggal_selesai         DateTime
    alasan                  String      @db.Text
    status                  LeaveStatus @default(pending)
    approval_terakhir_level Int         @default(0)
    catatan_admin           String?     @db.Text
    dicatat_oleh            String?     @db.VarChar(255)
    disetujui_oleh          Int? // FK ke User.id
    dokumen                 String?     @db.VarChar(255)
    created_at              DateTime    @default(now())
    updated_at              DateTime    @default(now()) @updatedAt

    user        User              @relation("LeaveUser", fields: [user_id], references: [id])
    jenisCuti   JenisCuti         @relation(fields: [jenis_cuti_id], references: [id])
    reviewer    User?             @relation("LeaveReviewer", fields: [disetujui_oleh], references: [id])
    approvalLog CutiApprovalLog[]

    @@map("leave_requests")
}

model KuotaCuti {
    id             Int @id @default(autoincrement())
    user_id        Int
    jenis_cuti_id  Int
    tahun          Int
    jatah_total    Int
    jatah_terpakai Int @default(0)

    user      User      @relation(fields: [user_id], references: [id])
    jenisCuti JenisCuti @relation(fields: [jenis_cuti_id], references: [id])

    @@unique([user_id, jenis_cuti_id, tahun])
    @@map("kuota_cuti")
}

model CutiApprovalFlow {
    id            Int  @id @default(autoincrement())
    lembaga_id    Int
    jenis_cuti_id Int?
    level         Int
    approver_id   Int
    dibuat_oleh   Int

    lembaga    Lembaga    @relation(fields: [lembaga_id], references: [id])
    jenisCuti  JenisCuti? @relation(fields: [jenis_cuti_id], references: [id])
    approver   User       @relation("ApproverFlow", fields: [approver_id], references: [id])
    dibuatOleh User       @relation("FlowCreatedBy", fields: [dibuat_oleh], references: [id])

    @@map("cuti_approval_flow")
}

model CutiApprovalLog {
    id                   Int            @id @default(autoincrement())
    cuti_id              Int
    approver_id          Int
    level                Int
    status               ApprovalStatus @default(pending)
    catatan              String?        @db.Text
    tanggal_approval     DateTime?
    batas_waktu_approval DateTime?

    leaveRequest LeaveRequest @relation(fields: [cuti_id], references: [id])
    approver     User         @relation(fields: [approver_id], references: [id])

    @@map("cuti_approval_log")
}

model Notifikasi {
    id         Int      @id @default(autoincrement())
    user_id    Int
    pesan      String   @db.Text
    dibaca     Boolean  @default(false)
    created_at DateTime @default(now())

    user User @relation(fields: [user_id], references: [id])

    @@map("notifikasi")
}

enum Role {
    superadmin
    admin
    karyawan
}

enum LeaveStatus {
    pending
    dalam_proses
    disetujui
    ditolak
}

enum ApprovalStatus {
    pending
    approved
    rejected
    auto_approved
}
